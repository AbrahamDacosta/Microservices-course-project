name: DESTROY PROJECT COURSE EKS

on:
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"
  EKS_DIR: terraform/eks
  MONITORING_DIR: terraform/monitoring
  TF_VERSION: "1.12.2"

jobs:
  microservice:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Connect to EKS cluster
        run: |
          aws eks update-kubeconfig --region us-east-1 --name microservice-proj

      - name: Deleting Example Microservice
        run: kubectl delete -f https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/refs/heads/main/release/kubernetes-manifests.yaml --ignore-not-found=true

      - name: Check Deployments Status
        run: kubectl get all -o wide -A


  terraform_monitoring:
            runs-on: ubuntu-latest
            needs: microservice
            steps:
              - name: Checkout code
                uses: actions/checkout@v4
                
              - name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}
                  
              - name: Install trivy
                run: |
                  sudo apt-get install wget apt-transport-https gnupg lsb-release
                  wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
                  echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
                  sudo apt-get update && sudo apt-get install trivy
        
              - name: Setup Terraform 
                uses: hashicorp/setup-terraform@v3
                with:
                    terraform_version: ${{env.TF_VERSION}}
                
              - name: Terraform Init
                working-directory: ${{env.MONITORING_DIR}}
                run: terraform init
                
              - name: Terraform Plan
                working-directory: ${{env.MONITORING_DIR}}
                run: terraform plan -out=tfplan
                
              - name: Terraform Apply
                working-directory: ${{env.MONITORING_DIR}}
                run: terraform destroy -auto-approve 
        
              


  terraform_eks:
    runs-on: ubuntu-latest
    needs: terraform_monitoring
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{env.TF_VERSION}}
        
      - name: Terraform Init
        working-directory: ${{env.EKS_DIR}}
        run: terraform init
        
      - name: Terraform Plan
        working-directory: ${{env.EKS_DIR}}
        run: terraform plan -out=tfplan
        
      - name: Terraform Destroy
        working-directory: ${{env.EKS_DIR}}
        run: terraform destroy -auto-approve 